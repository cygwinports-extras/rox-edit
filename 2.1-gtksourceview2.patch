--- origsrc/edit-2.1/Edit/EditWindow.py	2009-04-25 10:32:36.000000000 -0500
+++ src/edit-2.1/Edit/EditWindow.py	2009-12-27 13:59:39.997880200 -0600
@@ -45,7 +45,7 @@ to_utf8 = codecs.getencoder('utf-8')
 
 from buffer import Buffer, have_sourceview
 from rox.Menu import Menu, set_save_name, SubMenu, Separator, Action, ToggleItem
-if have_sourceview: import gtksourceview
+if have_sourceview: import gtksourceview2
 
 OptionsBox.widget_registry['source-view-only'] = optional_section(have_sourceview)
 
@@ -222,9 +222,9 @@ class EditWindow(rox.Window, XDSLoader, 
 		self.buffer = Buffer()
 
 		if have_sourceview:
-			self.text = gtksourceview.SourceView(self.buffer)
+			self.text = gtksourceview2.View(self.buffer)
 			pixbuf = g.gdk.pixbuf_new_from_file(rox.app_dir+"/images/marker.png")
-			self.text.set_marker_pixbuf("bookmark", pixbuf)			
+			self.text.set_mark_category_pixbuf("bookmark", pixbuf)			
 			if self.mime_type:
 				self.buffer.set_type(self.mime_type)
 		else:
@@ -513,12 +513,11 @@ class EditWindow(rox.Window, XDSLoader, 
 
 		if have_sourceview:
 			self.text.set_show_line_numbers(show_line_numbers.int_value)
-			self.text.set_show_line_markers(show_line_markers.int_value)
+			self.text.set_show_line_marks(show_line_markers.int_value)
 			self.text.set_auto_indent(auto_indent.int_value)
-			self.text.set_tabs_width(tab_width.int_value)
+			self.text.set_tab_width(tab_width.int_value)
 			self.text.set_insert_spaces_instead_of_tabs(use_spaces_for_tabs.int_value)
-			self.text.set_margin(right_margin.int_value)
-			self.text.set_show_margin(show_margin.int_value)
+			self.text.set_show_right_margin(show_margin.int_value)
 			self.text.set_smart_home_end(smart_home_end.int_value)
 			if self.buffer.language == 'Python':
 				self.text.set_auto_indent(False)
--- origsrc/edit-2.1/Edit/buffer.py	2009-04-25 10:32:36.000000000 -0500
+++ src/edit-2.1/Edit/buffer.py	2009-12-27 14:05:49.377007500 -0600
@@ -4,8 +4,8 @@ from rox import g
 # GtkSourceBuffer is a subclass of GtkTextBuffer which provides extra
 # features. We'll use it if it's available, or GtkTextBuffer if not.
 try:
-	import gtksourceview
-	_parentClass = gtksourceview.SourceBuffer
+	import gtksourceview2
+	_parentClass = gtksourceview2.Buffer
 	have_sourceview = True
 except:
 	_parentClass = g.TextBuffer
@@ -35,7 +35,7 @@ class Buffer(_parentClass):
 		self.redo_buffer = []	# Will be None during undo or redo
 
 		if have_sourceview:
-			self.lm = gtksourceview.SourceLanguagesManager()
+			self.lm = gtksourceview2.LanguageManager()
 			self.set_data('languages-manager', self.lm)
 	
 	def set_type(self, mime_type):
@@ -44,14 +44,14 @@ class Buffer(_parentClass):
 		if not have_sourceview: return
 		if not mime_type: return
 
-		language = self.lm.get_language_from_mime_type(mime_type.media + '/' + mime_type.subtype)
+		language = self.lm.guess_language(None, mime_type.media + '/' + mime_type.subtype)
 		if language:
-			self.set_highlight(True)
+			self.set_highlight_syntax(True)
 			self.set_language(language)			
 			self.language = language.get_name()
 		else:
 			#print 'No language found for mime type "%s"' % mime_type
-			self.set_highlight(False)
+			self.set_highlight_syntax(False)
 	
 	def start_undo_history(self):
 		if have_sourceview: return
